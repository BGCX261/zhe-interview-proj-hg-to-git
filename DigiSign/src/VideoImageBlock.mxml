<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="100%" height="100%"
				   creationComplete="completeHandler(event)">
	<fx:Script>
		<![CDATA[
			import org.osmf.events.TimeEvent;
			
			import spark.components.Image;
			import spark.components.VideoDisplay;
			
			private static const BASE_URL:String = "http://zhep.zxq.net";
			private static const VIDEOLIST_URL:String = "http://zhep.zxq.net/flv/list.txt";
			
			private static const IMAGE_URL:String = "http://www.sodao.com/app/ShowTime/gt1?pcs_id=1&size=1&rnd=";
			private static const VIDEO_URL:String = "http://zhep.zxq.net/flv/NoOneLikeYou.flv";
			
			private var aryPlayList:Array;
			private var tmrTimer:Timer = new Timer(5000);
			private var prepareImage:Image;
			private var urlLoader:URLLoader = new URLLoader();
			
			private function completeHandler(event:Event):void
			{
				trace('completeHandler');
				var urlResquest:URLRequest = new URLRequest(VIDEOLIST_URL);
				urlLoader.addEventListener(Event.COMPLETE, videoList_completeHandler);
				//urlLoader.addEventListener(IOErrorEvent.IO_ERROR, videoList_IOErrorHandler);
				//urlLoader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, videoList_SecurityErrorHandler);
				urlLoader.load(urlResquest);
			}
			
			private function videoList_completeHandler(event:Event):void
			{
				trace('videoList_completeHandler');
				urlLoader.removeEventListener(Event.COMPLETE, videoList_completeHandler);
				aryPlayList = String(URLLoader(event.target).data).split('\n');
				playNext();
			}
			
			private function playNext():void {
				trace('playNext');
				var strToPlay:String = aryPlayList.shift();
				aryPlayList.push(strToPlay);
				var aryItem:Array = strToPlay.split(':');
				
				if(aryItem[0] == 'Video') {
					loadPrepareVideo(aryItem[1]);
				} else {
					loadPrepareImage(aryItem[1]);
				}
				
				removeElementsLeft2();
				
				if(videoView.getElementAt(1) is VideoDisplay) {
					trace('---Video');
					var topVideo:VideoDisplay = VideoDisplay(videoView.getElementAt(1));
					playVideo(topVideo);
				} else if(videoView.getElementAt(1) is Image) {
					trace('---Image');
					var topImage:Image = Image(videoView.getElementAt(1));
					playImage(topImage);
				} else {
					trace('--- Group');
					playNext();
				}
			}
			
			private function loadPrepareVideo(strUrl:String):void
			{
				trace('loadPrepareVideo');
				var videoBlock:VideoDisplay = new VideoDisplay;
				videoBlock.percentHeight = videoBlock.percentWidth = 100;
				videoView.addElementAt(videoBlock, 0);
				videoBlock.autoPlay = videoBlock.visible = false;
				videoBlock.source = BASE_URL + strUrl;
			}
			
			private function loadPrepareImage(strUrl:String):void
			{
				trace('loadPrepareImage');
				var newImage:Image = new Image();
				newImage.percentHeight = newImage.percentWidth = 100;
				videoView.addElementAt(newImage, 0);
				newImage.visible = false;
				prepareImage = newImage;
				
				var urlResquest:URLRequest = new URLRequest(IMAGE_URL + Math.random());
				urlLoader.addEventListener(Event.COMPLETE, urlLoader_completeHandler);
				//urlLoader.addEventListener(IOErrorEvent.IO_ERROR, urlLoader_IOErrorHandler);
				//urlLoader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, urlLoader_SecurityErrorHandler);
				urlLoader.load(urlResquest);
			}
			
			private function urlLoader_completeHandler(event:Event):void
			{
				trace('urlLoader_completeHandler');
				var aryImageData:Array = String(URLLoader(event.target).data).match(/"path":"([^"]+)"/);
				var imgSource:String;
				if(aryImageData){
					imgSource = String(URLLoader(event.target).data).match(/"path":"([^"]+)"/)[1];
					prepareImage.source = imgSource;
				}
				if(!imgSource) {
					prepareImage.source = 'http://2.bp.blogspot.com/_HWHLSSRODNE/TVE0_dzl1dI/AAAAAAAAB4M/48rMfoDr76w/s1600/LostLogo_.jpg';
				}
			}
			
			private function removeElementsLeft2():void
			{
				trace('removeElementsLeft2');
				for(var ec:int = 0; ec < videoView.numElements - 2; ec++){
					videoView.removeElementAt(2);
				}
			}
			
			private function playVideo(video:VideoDisplay):void {
				trace('playVideo' + video.toString());
				video.visible = true;
				video.addEventListener(TimeEvent.COMPLETE, video_timeCompleteHandler);
				video.autoPlay = true;
				video.play();
			}
			
			private function playImage(image:Image):void {
				trace('playImage' + image.toString());
				image.visible = true;
				tmrTimer.addEventListener(TimerEvent.TIMER, tmrTimer_TimerHandler);
				tmrTimer.start();
			}
			
			private function video_timeCompleteHandler(event:TimeEvent):void
			{
				trace('videoBlock_timeCompleteHandler');
				VideoDisplay(event.target).removeEventListener(TimeEvent.COMPLETE, video_timeCompleteHandler);
				playNext();
			}
			
			private function tmrTimer_TimerHandler(event:TimerEvent):void
			{
				trace('tmrTimer_TimerHandler');
				tmrTimer.stop();
				playNext();
			}
			
			private function urlLoader_IOErrorHandler(event:IOErrorEvent):void
			{
				//
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Group id="videoView" width="100%" height="100%">
		<s:Group /><s:Group />
	</s:Group>
		
</s:BorderContainer>
